REST
    - API Server를 개발하기 위한 일종의 SW 설계방법론
    - 규칙 X 
    - 자원을 정의하고 자원에 대한 주소를 지정하는 전반적인 방법 서술 

REST API(RESTful API)
    - REST라는 설계 디자인 약속을 지켜 구현한 API
    - 어느 정도 약속 만들어서 다같이 쓰쟈 !

REST에서 자원을 정의하고 주소를 지정하는 방법
    - 자원의 "식별"     URL
    - 자원의 "행위"     HTTP Methods
    - 자원의 "표현"     JSON 데이터 

URI     - 인터넷에서 리소스(자원)을 식별하는 문자열
URL     - 웹에서 주어진 리소스의 주소 

대표 HTTP Request Methods
1. GET      - 서버에 리소스 요청, 검색만
2. POST     - 데이터에 지정된 리소스 제출, 서버상태 변경
3. PUT      - 요청한 주소의 리소스 수정
4. DELETE   - 지정된 리소스 삭제


views.py
@api_view()
def article_json(request):
    articles = Article.objects.all()
    serializer = ArticleSerializer(articles, many=True)
    return Response(serializer.data)


Django REST framework
- Django에서 Restful API 서버를 쉽게 구축 가능

pip install djangorestframework

INSTALLED_APPS = [
    'rest_framework',
]

Serialization   - 직렬화
    - 여러 시스템에서 활용하기 위해 데이터 구조나 객체를 재구성할 수 있는 포맷으로 변환

ModelSerializer - Django모델과 연결된 Serializer 클래스

---------------------------------------------------------

class CommentSerializer(serializers.ModelSerializer):
    class Meta:
        model = Comment
        fields = '__all__'
        # 유효성 검사에서 제외시키고 데이터 조회시에는 출력하는 필드
        read_only_fields=('article',)


API 문서화 
 pip install drf-spectacular

 INSTALLED_APPS = [
    'drf_spectacular',
    'articles',
    'rest_framework',
    "django.contrib.admin",
    "django.contrib.auth",
    "django.contrib.contenttypes",
    "django.contrib.sessions",
    "django.contrib.messages",
    "django.contrib.staticfiles",
]

REST_FRAMEWORK = {
    # YOUR SETTINGS
    'DEFAULT_SCHEMA_CLASS': 'drf_spectacular.openapi.AutoSchema',
}

from drf_spectacular.views import SpectacularAPIView, SpectacularRedocView, SpectacularSwaggerView

get_list_or_404   
    - 존재하지 않는 게시글 조회 시 이전엔 500이지만 현재는 404 응답
articles = get_list_or_404(Article)
comments = get_list_or_404(Comment)

get_object_or_404
    - 해당 객체가 없을 시 DoesNotExist대신 Http404 read_only_fields
from django.shortcuts import get_object_or_404
article = get_object_or_404(Article, pk=article_pk)
comment = get_object_or_404(Comment, pk=comment_pk)